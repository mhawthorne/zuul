apply plugin: 'java'
apply plugin: 'application'

apply plugin: 'eclipse'
apply plugin: 'idea'


configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.netflix.rxjava' && details.requested.name == 'rxjava-core') {
            details.useVersion '[0.17,)'
        }
    }
}

dependencies {
    compile project(":zuul-core")
    
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'

    compile 'io.netty:netty-handler:4.0.14.Final'
    compile 'io.netty:netty-codec-http:4.0.14.Final'
    compile 'com.netflix.rxjava:rxjava-core:[0.17,)'
    
    provided 'junit:junit-dep:4.10'
    //provided 'javax.servlet:servlet-api:2.5'

    // using local copy of rxnetty until it is public (plus dependencies)
    compile files('../rxnetty-lib/rx-netty-0.3.4.jar')
    compile files('../rxnetty-lib/numerus-1.2-SNAPSHOT.jar')
}

eclipse {
  classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided
        downloadSources = true
        downloadJavadoc = true
  }
}


idea {
    module {
        // include 'provided' dependencies on the classpath
        scopes.PROVIDED.plus += configurations.provided
    }
}


mainClassName = "com.netflix.rxnetty.loadgen.Main"

/*
applicationDistribution.from("src/main/filters") {
    into "scripts"
}
*/
